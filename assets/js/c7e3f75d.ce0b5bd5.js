"use strict";(self.webpackChunkesp_dash_docs=self.webpackChunkesp_dash_docs||[]).push([[8455],{5680:(e,r,t)=>{t.d(r,{xA:()=>p,yg:()=>m});var a=t(6540);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function d(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var c=a.createContext({}),o=function(e){var r=a.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):d(d({},r),e)),t},p=function(e){var r=o(e.components);return a.createElement(c.Provider,{value:r},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},y=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=o(t),y=n,m=s["".concat(c,".").concat(y)]||s[y]||u[y]||i;return t?a.createElement(m,d(d({ref:r},p),{},{components:t})):a.createElement(m,d({ref:r},p))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=t.length,d=new Array(i);d[0]=y;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[s]="string"==typeof e?e:n,d[1]=l;for(var o=2;o<i;o++)d[o]=t[o];return a.createElement.apply(null,d)}return a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},4859:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>o});var a=t(8168),n=(t(6540),t(5680));const i={title:"Humidity Card",sidebar_label:"Humidity",sidebar_position:3},d=void 0,l={unversionedId:"widgets/cards/humidity",id:"widgets/cards/humidity",title:"Humidity Card",description:"This card adds a distinctive humidity icon, and just like generic card you can add a symbol which will be appended to your data.",source:"@site/docs/widgets/cards/humidity.md",sourceDirName:"widgets/cards",slug:"/widgets/cards/humidity",permalink:"/next/widgets/cards/humidity",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Humidity Card",sidebar_label:"Humidity",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Temperature",permalink:"/next/widgets/cards/temperature"},next:{title:"Progress Bar",permalink:"/next/widgets/cards/progress"}},c={},o=[{value:"Initializer",id:"initializer",level:3},{value:"Callback",id:"callback",level:3},{value:"Updater",id:"updater",level:3},{value:"Reference",id:"reference",level:3}],p={toc:o},s="wrapper";function u(e){let{components:r,...t}=e;return(0,n.yg)(s,(0,a.A)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,n.yg)("img",{className:"card-preview",src:"/img/v4/humidity-card.png",width:"280px",alt:"Preview"}),(0,n.yg)("br",null),(0,n.yg)("br",null),(0,n.yg)("p",null,"This card adds a distinctive humidity icon, and just like generic card you can add a symbol which will be appended to your data."),(0,n.yg)("h3",{id:"initializer"},"Initializer"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},'/* \n  Humidity Card\n  Valid Arguments: (ESPDash dashboard, Card Type, const char* name, const char* symbol (optional) )\n*/\nCard card1(&dashboard, HUMIDITY_CARD, "Humidity1", "%");\n')),(0,n.yg)("h3",{id:"callback"},"Callback"),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("p",{parentName:"admonition"},(0,n.yg)("em",{parentName:"p"},"Humidity card doesn't require any callback."))),(0,n.yg)("h3",{id:"updater"},"Updater"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},"card1.update(int value);\n")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},"card1.update(float value);\n")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},"card1.update(String value);\n")),(0,n.yg)("p",null,"Or you can also update the symbol along with the value like this:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},'card1.update(value, "RH");\n')),(0,n.yg)("h3",{id:"reference"},"Reference"),(0,n.yg)("p",null,"This is a reference sketch showing positions for intializer and updater."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},'\n...\n\n/* Humidity card initializer */\nCard humidity(&dashboard, HUMIDITY_CARD, "Humidity1");\n\n\nvoid setup() {\n  ...\n\n  /* Humidity card updater - can be used anywhere (apart from global scope) */\n  humidity.update(100);\n}\n\nvoid loop() {\n  ...\n}\n\n')))}u.isMDXComponent=!0}}]);