"use strict";(self.webpackChunkesp_dash_docs=self.webpackChunkesp_dash_docs||[]).push([[9984],{5680:(e,a,r)=>{r.d(a,{xA:()=>c,yg:()=>g});var t=r(6540);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function i(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?i(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function o(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=t.createContext({}),d=function(e){var a=t.useContext(p),r=a;return e&&(r="function"==typeof e?e(a):l(l({},a),e)),r},c=function(e){var a=d(e.components);return t.createElement(p.Provider,{value:a},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},y=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=d(r),y=n,g=s["".concat(p,".").concat(y)]||s[y]||u[y]||i;return r?t.createElement(g,l(l({ref:a},c),{},{components:r})):t.createElement(g,l({ref:a},c))}));function g(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=y;var o={};for(var p in a)hasOwnProperty.call(a,p)&&(o[p]=a[p]);o.originalType=e,o[s]="string"==typeof e?e:n,l[1]=o;for(var d=2;d<i;d++)l[d]=r[d];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}y.displayName="MDXCreateElement"},6927:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var t=r(8168),n=(r(6540),r(5680));const i={title:"Text Input Card",sidebar_label:"Text Input (Pro)",sidebar_position:6},l=void 0,o={unversionedId:"cards/text-input",id:"version-v3.x.x/cards/text-input",title:"Text Input Card",description:"This feature is available in DASH Pro only.",source:"@site/versioned_docs/version-v3.x.x/cards/text-input.md",sourceDirName:"cards",slug:"/cards/text-input",permalink:"/v3.x.x/cards/text-input",draft:!1,tags:[],version:"v3.x.x",sidebarPosition:6,frontMatter:{title:"Text Input Card",sidebar_label:"Text Input (Pro)",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Slider",permalink:"/v3.x.x/cards/slider"},next:{title:"Joystick (Pro)",permalink:"/v3.x.x/cards/joystick"}},p={},d=[{value:"Preview:",id:"preview",level:4},{value:"Type:",id:"type",level:4},{value:"Valid Data Types:",id:"valid-data-types",level:4},{value:"Initializer:",id:"initializer",level:4},{value:"Callback:",id:"callback",level:4},{value:"Updaters:",id:"updaters",level:4}],c={toc:d},s="wrapper";function u(e){let{components:a,...r}=e;return(0,n.yg)(s,(0,t.A)({},c,r,{components:a,mdxType:"MDXLayout"}),(0,n.yg)("div",{style:{border:"1px solid rgba(255,0,0, 0.03)",padding:20,borderRadius:14,backgroundColor:"rgba(255,0,0, 0.03)",maxWidth:600}},(0,n.yg)("h4",{style:{fontWeight:"500",marginBottom:5}}," This feature is available in ",(0,n.yg)("a",{target:"_blank",style:{color:"red"},href:"https://espdash.pro"},"DASH Pro")," only.")),(0,n.yg)("h4",{id:"preview"},"Preview:"),(0,n.yg)("img",{src:"/img//text-input-card.png",width:"280px",alt:"Energy Card Preview"}),(0,n.yg)("br",null),(0,n.yg)("br",null),(0,n.yg)("p",null,"Text Input Card gives you the ability to take String input from user and save them in your application. It provides you with a input box on the dashboard where user can send back text to your application. "),(0,n.yg)("p",null,"This card is very useful for saving WiFi credentials, passwords and general information."),(0,n.yg)("br",null),(0,n.yg)("h4",{id:"type"},"Type:"),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"TEXT_INPUT_CARD")),(0,n.yg)("br",null),(0,n.yg)("h4",{id:"valid-data-types"},"Valid Data Types:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"String"))),(0,n.yg)("br",null),(0,n.yg)("h4",{id:"initializer"},"Initializer:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},'/* \n  Energy Card\n  Valid Arguments: (ESPDash dashboard, Card Type, const char* name)\n*/\nCard card1(&dashboard, TEXT_INPUT_CARD, "User Email");\n')),(0,n.yg)("br",null),(0,n.yg)("h4",{id:"callback"},"Callback:"),(0,n.yg)("p",null,"Text Input Card requires a callback function which will be called when we receive a input from our dashboard. In setup block, we will be calling our ",(0,n.yg)("inlineCode",{parentName:"p"},"attachCallback")," function and provide a lambda (callback) function with a ",(0,n.yg)("inlineCode",{parentName:"p"},"const char*")," (character array) argument."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Note:")," You need to call the ",(0,n.yg)("inlineCode",{parentName:"p"},"update")," function and ",(0,n.yg)("inlineCode",{parentName:"p"},"sendUpdates")," immediately once you receive the value in callback. Otherwise user input will not be registered on dashboard and it will keep the card stuck in 'waiting' phase."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},'/*\n  We provide our attachCallback with a lambda function to handle incomming data\n  `value` is the boolean sent from your dashboard\n*/\ncard1.attachCallback([&](const char* value){\n  Serial.println("[Card1] Text Input Callback Triggered: "+String(value));\n  card1.update(value);\n  dashboard.sendUpdates();\n});\n')),(0,n.yg)("br",null),(0,n.yg)("h4",{id:"updaters"},"Updaters:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},"card1.update(const char* value);\n")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},"card1.update(String value);\n")))}u.isMDXComponent=!0}}]);