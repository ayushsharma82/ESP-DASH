"use strict";(self.webpackChunkesp_dash_docs=self.webpackChunkesp_dash_docs||[]).push([[5656],{5788:(e,a,t)=>{t.d(a,{Iu:()=>d,yg:()=>g});var r=t(1504);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var p=r.createContext({}),c=function(e){var a=r.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},d=function(e){var a=c(e.components);return r.createElement(p.Provider,{value:a},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},y=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),s=c(t),y=n,g=s["".concat(p,".").concat(y)]||s[y]||u[y]||i;return t?r.createElement(g,l(l({ref:a},d),{},{components:t})):r.createElement(g,l({ref:a},d))}));function g(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=t.length,l=new Array(i);l[0]=y;var o={};for(var p in a)hasOwnProperty.call(a,p)&&(o[p]=a[p]);o.originalType=e,o[s]="string"==typeof e?e:n,l[1]=o;for(var c=2;c<i;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},1784:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=t(5072),n=(t(1504),t(5788));const i={title:"Text Input Card",sidebar_label:"Text Input (Pro)",sidebar_position:6},l=void 0,o={unversionedId:"cards/text-input",id:"version-v4.x.x/cards/text-input",title:"Text Input Card",description:"This feature is available in DASH Pro only.",source:"@site/versioned_docs/version-v4.x.x/cards/text-input.md",sourceDirName:"cards",slug:"/cards/text-input",permalink:"/cards/text-input",draft:!1,tags:[],version:"v4.x.x",sidebarPosition:6,frontMatter:{title:"Text Input Card",sidebar_label:"Text Input (Pro)",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Slider",permalink:"/cards/slider"},next:{title:"Joystick (Pro)",permalink:"/cards/joystick"}},p={},c=[{value:"Preview:",id:"preview",level:4},{value:"Type:",id:"type",level:4},{value:"Valid Data Types:",id:"valid-data-types",level:4},{value:"Initializer:",id:"initializer",level:4},{value:"Callback:",id:"callback",level:4},{value:"Updaters:",id:"updaters",level:4}],d={toc:c},s="wrapper";function u(e){let{components:a,...t}=e;return(0,n.yg)(s,(0,r.c)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,n.yg)("div",{className:"pro-label"},(0,n.yg)("i",null,(0,n.yg)("h4",{style:{fontWeight:"500",marginBottom:5}},"This feature is available in ",(0,n.yg)("a",{target:"_blank",style:{color:"red"},href:"https://espdash.pro"},"DASH Pro")," only."))),(0,n.yg)("h4",{id:"preview"},"Preview:"),(0,n.yg)("img",{className:"card-preview",src:"/img/v4/text-input-card.png",width:"280px",alt:"Text Input Card Preview"}),(0,n.yg)("br",null),(0,n.yg)("br",null),(0,n.yg)("p",null,"Text Input Card gives you the ability to take String input from user and save them in your application. It provides you with a input box on the dashboard where user can send back text to your application. "),(0,n.yg)("p",null,"This card is very useful for saving WiFi credentials, passwords and general information."),(0,n.yg)("br",null),(0,n.yg)("h4",{id:"type"},"Type:"),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"TEXT_INPUT_CARD")),(0,n.yg)("br",null),(0,n.yg)("h4",{id:"valid-data-types"},"Valid Data Types:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"String")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"char"))),(0,n.yg)("br",null),(0,n.yg)("h4",{id:"initializer"},"Initializer:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},'/* \n  Energy Card\n  Valid Arguments: (ESPDash dashboard, Card Type, const char* name)\n*/\nCard card1(&dashboard, TEXT_INPUT_CARD, "User Email");\n')),(0,n.yg)("br",null),(0,n.yg)("h4",{id:"callback"},"Callback:"),(0,n.yg)("p",null,"Text Input Card requires a callback function which will be called when we receive a input from our dashboard. In setup block, we will be calling our ",(0,n.yg)("inlineCode",{parentName:"p"},"attachCallback")," function and provide a lambda (callback) function with a ",(0,n.yg)("inlineCode",{parentName:"p"},"const char*")," (character array) argument."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Note:")," You need to call the ",(0,n.yg)("inlineCode",{parentName:"p"},"update")," function and ",(0,n.yg)("inlineCode",{parentName:"p"},"sendUpdates")," immediately once you receive the value in callback. Otherwise user input will not be registered on dashboard and it will keep the card stuck in 'waiting' phase."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},'/*\n  We provide our attachCallback with a lambda function to handle incomming data\n*/\ncard1.attachCallback([&](const char* value){\n  Serial.println("[Card1] Text Input Callback Triggered: "+String(value));\n  card1.update(value);\n  dashboard.sendUpdates();\n});\n')),(0,n.yg)("br",null),(0,n.yg)("h4",{id:"updaters"},"Updaters:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},"card1.update(const char* value);\n")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},"card1.update(String value);\n")))}u.isMDXComponent=!0}}]);