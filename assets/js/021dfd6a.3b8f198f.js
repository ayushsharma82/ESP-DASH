"use strict";(self.webpackChunkesp_dash_docs=self.webpackChunkesp_dash_docs||[]).push([[7452],{5788:(e,r,a)=>{a.d(r,{Iu:()=>d,yg:()=>y});var t=a(1504);function n(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function i(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?i(Object(a),!0).forEach((function(r){n(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function c(e,r){if(null==e)return{};var a,t,n=function(e,r){if(null==e)return{};var a,t,n={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],r.indexOf(a)>=0||(n[a]=e[a]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=t.createContext({}),o=function(e){var r=t.useContext(p),a=r;return e&&(a="function"==typeof e?e(r):l(l({},r),e)),a},d=function(e){var r=o(e.components);return t.createElement(p.Provider,{value:r},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=o(a),m=n,y=u["".concat(p,".").concat(m)]||u[m]||s[m]||i;return a?t.createElement(y,l(l({ref:r},d),{},{components:a})):t.createElement(y,l({ref:r},d))}));function y(e,r){var a=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=m;var c={};for(var p in r)hasOwnProperty.call(r,p)&&(c[p]=r[p]);c.originalType=e,c[u]="string"==typeof e?e:n,l[1]=c;for(var o=2;o<i;o++)l[o]=a[o];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6896:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>p,contentTitle:()=>l,default:()=>s,frontMatter:()=>i,metadata:()=>c,toc:()=>o});var t=a(5072),n=(a(1504),a(5788));const i={title:"Temperature Card",sidebar_label:"Temperature",sidebar_position:2},l=void 0,c={unversionedId:"cards/temperature",id:"version-v4.x.x/cards/temperature",title:"Temperature Card",description:"This card adds a distinctive temperature icon, and just like generic card you can add a symbol which will be appended to your data.",source:"@site/versioned_docs/version-v4.x.x/cards/temperature.md",sourceDirName:"cards",slug:"/cards/temperature",permalink:"/cards/temperature",draft:!1,tags:[],version:"v4.x.x",sidebarPosition:2,frontMatter:{title:"Temperature Card",sidebar_label:"Temperature",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Generic",permalink:"/cards/generic"},next:{title:"Humidity",permalink:"/cards/humidity"}},p={},o=[{value:"Initializer",id:"initializer",level:3},{value:"Callback",id:"callback",level:3},{value:"Updater",id:"updater",level:3},{value:"Reference",id:"reference",level:3}],d={toc:o},u="wrapper";function s(e){let{components:r,...a}=e;return(0,n.yg)(u,(0,t.c)({},d,a,{components:r,mdxType:"MDXLayout"}),(0,n.yg)("img",{className:"card-preview",src:"/img/v4/temperature-card.png",width:"280px",alt:"Preview"}),(0,n.yg)("br",null),(0,n.yg)("br",null),(0,n.yg)("p",null,"This card adds a distinctive temperature icon, and just like generic card you can add a symbol which will be appended to your data."),(0,n.yg)("h3",{id:"initializer"},"Initializer"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},'/* \n  Temperature Card\n  Valid Arguments: (ESPDash dashboard, Card Type, const char* name, const char* symbol (optional) )\n*/\nCard card1(&dashboard, TEMPERATURE_CARD, "Temperature1", "\xb0C");\n')),(0,n.yg)("h3",{id:"callback"},"Callback"),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("p",{parentName:"admonition"},(0,n.yg)("em",{parentName:"p"},"Temperature card doesn't require any callback."))),(0,n.yg)("h3",{id:"updater"},"Updater"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},"card1.update(int value);\n")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},"card1.update(float value);\n")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},"card1.update(String value);\n")),(0,n.yg)("p",null,"Or you can also update the symbol along with the value like this:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},'card1.update(value, "\xb0F");\n')),(0,n.yg)("h3",{id:"reference"},"Reference"),(0,n.yg)("p",null,"This is a reference sketch showing positions for intializer and updater."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},'\n...\n\n/* Temperature card initializer */\nCard temperature(&dashboard, TEMPERATURE_CARD, "Temperature1");\n\n\nvoid setup() {\n  ...\n\n  /* Temperature card updater - can be used anywhere (apart from global scope) */\n  temperature.update(100);\n}\n\nvoid loop() {\n  ...\n}\n\n')))}s.isMDXComponent=!0}}]);