"use strict";(self.webpackChunkesp_dash_docs=self.webpackChunkesp_dash_docs||[]).push([[4242],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>m});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var d=r.createContext({}),c=function(e){var t=r.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,d=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=c(a),h=n,m=p["".concat(d,".").concat(h)]||p[h]||u[h]||l;return a?r.createElement(m,o(o({ref:t},s),{},{components:a})):r.createElement(m,o({ref:t},s))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=h;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[p]="string"==typeof e?e:n,o[1]=i;for(var c=2;c<l;c++)o[c]=a[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},365:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));const l={title:"Dropdown Card",sidebar_label:"Dropdown (Pro)",sidebar_position:8},o=void 0,i={unversionedId:"cards/dropdown",id:"cards/dropdown",title:"Dropdown Card",description:"This feature is available in DASH Pro only.",source:"@site/docs/cards/dropdown.md",sourceDirName:"cards",slug:"/cards/dropdown",permalink:"/next/cards/dropdown",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"Dropdown Card",sidebar_label:"Dropdown (Pro)",sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Joystick (Pro)",permalink:"/next/cards/joystick"},next:{title:"Image (Pro)",permalink:"/next/cards/image"}},d={},c=[{value:"Preview:",id:"preview",level:4},{value:"Type:",id:"type",level:4},{value:"Valid Data Types:",id:"valid-data-types",level:4},{value:"Initializer:",id:"initializer",level:4},{value:"Callback:",id:"callback",level:4},{value:"Updaters:",id:"updaters",level:4}],s={toc:c},p="wrapper";function u(e){let{components:t,...a}=e;return(0,n.kt)(p,(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("div",{className:"pro-label"},(0,n.kt)("i",null,(0,n.kt)("h4",{style:{fontWeight:"500",marginBottom:5}},"This feature is available in ",(0,n.kt)("a",{target:"_blank",style:{color:"red"},href:"https://espdash.pro"},"DASH Pro")," only."))),(0,n.kt)("h4",{id:"preview"},"Preview:"),(0,n.kt)("img",{class:"card-preview",src:"/img/v4/dropdown-card.png",width:"280px",alt:"Preview"}),"\xa0",(0,n.kt)("img",{class:"card-preview",src:"/img/v4/dropdown-card-2.png",width:"280px",alt:"Preview"}),(0,n.kt)("br",null),(0,n.kt)("br",null),(0,n.kt)("p",null,'This card adds a dropdown selectable list on your dashboard. You can pass "," comma separated list as it\'s secondary value with unlimited number of choices.'),(0,n.kt)("br",null),(0,n.kt)("h4",{id:"type"},"Type:"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"DROPDOWN_CARD")),(0,n.kt)("br",null),(0,n.kt)("h4",{id:"valid-data-types"},"Valid Data Types:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"String"))),(0,n.kt)("br",null),(0,n.kt)("h4",{id:"initializer"},"Initializer:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},'/* \n  Dropdown Card\n  Valid Arguments: (ESPDash dashboard, Card Type, const char* name, const char* choices )\n*/\nCard card1(&dashboard, DROPDOWN_CARD, "Test Dropdown", "Option1,Option2,Option3,Option4");\n')),(0,n.kt)("br",null),(0,n.kt)("h4",{id:"callback"},"Callback:"),(0,n.kt)("p",null,"The Dropdown Card requires a callback function that will be invoked when input is received from the dashboard. This function should utilize the ",(0,n.kt)("inlineCode",{parentName:"p"},"attachCallback")," method and provide a lambda function with a ",(0,n.kt)("inlineCode",{parentName:"p"},"const char*")," parameter."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Note:")," It's essential to immediately invoke the ",(0,n.kt)("inlineCode",{parentName:"p"},"update")," function and ",(0,n.kt)("inlineCode",{parentName:"p"},"sendUpdates")," after receiving a value in the callback. Failure to do so will result in the user's input not being registered on the dashboard."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},'/*\n  Here, we use a lambda function within attachCallback to handle incoming data.\n  `value` represents the const char value sent from your dashboard which is equal to selected value.\n*/\ncard1.attachCallback([&](const char* value){\n  Serial.println("[Card1] Dropdown Callback Triggered: "+String(value));\n  card1.update(value);\n  dashboard.sendUpdates();\n});\n')),(0,n.kt)("br",null),(0,n.kt)("h4",{id:"updaters"},"Updaters:"),(0,n.kt)("p",null,"This will change the selected value of our dropdown:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"card1.update(const char* value);\n")),(0,n.kt)("p",null,"Or you can also update the choices along with the value like this:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"// This will change the selected value and update the choices as well\ncard1.update(const char* value, const char* choices);\n")),(0,n.kt)("br",null),(0,n.kt)("br",null))}u.isMDXComponent=!0}}]);