"use strict";(self.webpackChunkesp_dash_docs=self.webpackChunkesp_dash_docs||[]).push([[8988],{5788:(e,a,r)=>{r.d(a,{Iu:()=>p,yg:()=>m});var t=r(1504);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function i(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?i(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function l(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=t.createContext({}),s=function(e){var a=t.useContext(c),r=a;return e&&(r="function"==typeof e?e(a):o(o({},a),e)),r},p=function(e){var a=s(e.components);return t.createElement(c.Provider,{value:a},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},g=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(r),g=n,m=d["".concat(c,".").concat(g)]||d[g]||u[g]||i;return r?t.createElement(m,o(o({ref:a},p),{},{components:r})):t.createElement(m,o({ref:a},p))}));function m(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=g;var l={};for(var c in a)hasOwnProperty.call(a,c)&&(l[c]=a[c]);l.originalType=e,l[d]="string"==typeof e?e:n,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}g.displayName="MDXCreateElement"},2516:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var t=r(5072),n=(r(1504),r(5788));const i={title:"Image Card",sidebar_label:"Image (Pro)",sidebar_position:10},o=void 0,l={unversionedId:"cards/image",id:"version-v4.x.x/cards/image",title:"Image Card",description:"This is an exclusive feature of DASH Pro. Check it out here.",source:"@site/versioned_docs/version-v4.x.x/cards/image.md",sourceDirName:"cards",slug:"/cards/image",permalink:"/cards/image",draft:!1,tags:[],version:"v4.x.x",sidebarPosition:10,frontMatter:{title:"Image Card",sidebar_label:"Image (Pro)",sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Energy (Pro)",permalink:"/cards/energy"},next:{title:"Text Input (Pro)",permalink:"/cards/text-input"}},c={},s=[{value:"Initializer",id:"initializer",level:3},{value:"Callback",id:"callback",level:3},{value:"Updater",id:"updater",level:3},{value:"Reference",id:"reference",level:3}],p={toc:s},d="wrapper";function u(e){let{components:a,...r}=e;return(0,n.yg)(d,(0,t.c)({},p,r,{components:a,mdxType:"MDXLayout"}),(0,n.yg)("admonition",{title:"Pro Feature",type:"danger"},(0,n.yg)("p",{parentName:"admonition"},"This is an exclusive feature of DASH Pro. Check it out ",(0,n.yg)("a",{parentName:"p",href:"https://espdash.pro"},"here"),".")),(0,n.yg)("img",{className:"card-preview",src:"/img/v4/image-card.png",width:"280px",alt:"Preview"}),(0,n.yg)("br",null),(0,n.yg)("br",null),(0,n.yg)("p",null,"This card adds a image on your dashboard. You can pass a absolute URL to this card and it will load that image within this card on the dashboard. If the size is a bit small for you, then you can even make the card bigger by using the size value together with ",(0,n.yg)("inlineCode",{parentName:"p"},"setSize")," function."),(0,n.yg)("h3",{id:"initializer"},"Initializer"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},'/* \n  Image Card\n  Valid Arguments: (ESPDash dashboard, Card Type, const char* name, const char* size )\n*/\nCard card1(&dashboard, IMAGE_CARD, "Test Image", "lg");\n')),(0,n.yg)("h3",{id:"callback"},"Callback"),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("p",{parentName:"admonition"},(0,n.yg)("em",{parentName:"p"},"Image card doesn't require any callback."))),(0,n.yg)("h3",{id:"updater"},"Updater"),(0,n.yg)("p",null,"After initialization, you will have to provide the URL of the image which you want to display."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},"card1.update(const char* url);\n")),(0,n.yg)("p",null,'Or you can also update the size of image using the second parameter. Supported sizes: "lg" and "xl"'),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},"// This will change the selected value and update the choices as well\ncard1.update(const char* url, const char* size);\n")),(0,n.yg)("h3",{id:"reference"},"Reference"),(0,n.yg)("p",null,"This is a reference sketch showing positions for intializer and updater."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},'\n...\n\n/* Image card initializer */\nCard image(&dashboard, IMAGE_CARD, "Test Image", "lg");\n\n\nvoid setup() {\n  ...\n\n  /* Image card updater - can be used anywhere (apart from global scope) */\n  image.update("https://fastly.picsum.photos/id/598/800/600.jpg?grayscale&hmac=SQ5T_OGiPMX4r1fb-gA2fU6pourJEfxmTz7g1HfXOSk");\n}\n\nvoid loop() {\n  ...\n}\n\n')))}u.isMDXComponent=!0}}]);