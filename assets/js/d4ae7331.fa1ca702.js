"use strict";(self.webpackChunkesp_dash_docs=self.webpackChunkesp_dash_docs||[]).push([[3755],{5680:(e,r,n)=>{n.d(r,{xA:()=>p,yg:()=>g});var t=n(6540);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function c(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=t.createContext({}),s=function(e){var r=t.useContext(o),n=r;return e&&(n="function"==typeof e?e(r):c(c({},r),e)),n},p=function(e){var r=s(e.components);return t.createElement(o.Provider,{value:r},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},y=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),y=a,g=d["".concat(o,".").concat(y)]||d[y]||u[y]||i;return n?t.createElement(g,c(c({ref:r},p),{},{components:n})):t.createElement(g,c({ref:r},p))}));function g(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=y;var l={};for(var o in r)hasOwnProperty.call(r,o)&&(l[o]=r[o]);l.originalType=e,l[d]="string"==typeof e?e:a,c[1]=l;for(var s=2;s<i;s++)c[s]=n[s];return t.createElement.apply(null,c)}return t.createElement.apply(null,n)}y.displayName="MDXCreateElement"},2947:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var t=n(8168),a=(n(6540),n(5680));const i={title:"Generic Card",sidebar_label:"Generic",sidebar_position:1},c=void 0,l={unversionedId:"cards/generic",id:"cards/generic",title:"Generic Card",description:"Generic card is the 'fits-all-types' card, which you can use to display any kind of value. It's mostly used when you want to display numbers, strings etc which don't relate to any other card in the list.",source:"@site/docs/cards/generic.md",sourceDirName:"cards",slug:"/cards/generic",permalink:"/next/cards/generic",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Generic Card",sidebar_label:"Generic",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Statistics",permalink:"/next/custom-statistics"},next:{title:"Temperature",permalink:"/next/cards/temperature"}},o={},s=[{value:"Initializer",id:"initializer",level:3},{value:"Callback",id:"callback",level:3},{value:"Updater",id:"updater",level:3},{value:"Reference",id:"reference",level:3}],p={toc:s},d="wrapper";function u(e){let{components:r,...n}=e;return(0,a.yg)(d,(0,t.A)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("img",{className:"card-preview",src:"/img/v4/generic-card.png",width:"280px",alt:"Preview"}),(0,a.yg)("br",null),(0,a.yg)("br",null),(0,a.yg)("p",null,"Generic card is the 'fits-all-types' card, which you can use to display any kind of value. It's mostly used when you want to display numbers, strings etc which don't relate to any other card in the list."),(0,a.yg)("h3",{id:"initializer"},"Initializer"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},'/* \n  Generic Card\n  Valid Arguments: (ESPDash dashboard, Card Type, const char* name, const char* symbol (optional) )\n*/\nCard card1(&dashboard, GENERIC_CARD, "Generic1");\n')),(0,a.yg)("h3",{id:"callback"},"Callback"),(0,a.yg)("admonition",{type:"note"},(0,a.yg)("p",{parentName:"admonition"},(0,a.yg)("em",{parentName:"p"},"Generic card doesn't require any callback."))),(0,a.yg)("h3",{id:"updater"},"Updater"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"card1.update(int value);\n")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"card1.update(bool value);\n")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"card1.update(float value);\n")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"card1.update(String value);\n")),(0,a.yg)("h3",{id:"reference"},"Reference"),(0,a.yg)("p",null,"This is a reference sketch showing positions for intializer and updater."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},'\n...\n\n/* Generic card initializer */\nCard generic(&dashboard, GENERIC_CARD, "Generic1");\n\n\nvoid setup() {\n  ...\n\n  /* Generic card updater - can be used anywhere (apart from global scope) */\n  generic.update(100);\n}\n\nvoid loop() {\n  ...\n}\n\n')))}u.isMDXComponent=!0}}]);