"use strict";(self.webpackChunkesp_dash_docs=self.webpackChunkesp_dash_docs||[]).push([[1211],{5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>b});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),c=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(d.Provider,{value:t},e.children)},p="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),g=r,b=p["".concat(d,".").concat(g)]||p[g]||s[g]||o;return n?a.createElement(b,l(l({ref:t},u),{},{components:n})):a.createElement(b,l({ref:t},u))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=g;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9934:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>s,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(8168),r=(n(6540),n(5680));const o={title:"Toggle Button",sidebar_label:"Toggle Button",sidebar_position:6},l=void 0,i={unversionedId:"cards/button",id:"version-v4.x.x/cards/button",title:"Toggle Button",description:"Button card adds a interactive toggle button to your dashboard. This provides you with a simple 1 or 0 input from your dashboard.",source:"@site/versioned_docs/version-v4.x.x/cards/button.md",sourceDirName:"cards",slug:"/cards/button",permalink:"/cards/button",draft:!1,tags:[],version:"v4.x.x",sidebarPosition:6,frontMatter:{title:"Toggle Button",sidebar_label:"Toggle Button",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Status",permalink:"/cards/status"},next:{title:"Slider",permalink:"/cards/slider"}},d={},c=[{value:"Initializer",id:"initializer",level:3},{value:"Callback",id:"callback",level:3},{value:"Updater",id:"updater",level:3},{value:"Reference",id:"reference",level:3}],u={toc:c},p="wrapper";function s(e){let{components:t,...n}=e;return(0,r.yg)(p,(0,a.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("img",{className:"card-preview",src:"/img/v4/button-card-false.png",width:"280px",alt:"Button Card Preview"}),(0,r.yg)("img",{className:"card-preview",src:"/img/v4/button-card-true.png",width:"280px",alt:"Button Card Preview"}),(0,r.yg)("br",null),(0,r.yg)("br",null),(0,r.yg)("p",null,"Button card adds a interactive toggle button to your dashboard. This provides you with a simple ",(0,r.yg)("inlineCode",{parentName:"p"},"1")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"0")," input from your dashboard."),(0,r.yg)("h3",{id:"initializer"},"Initializer"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},'/* \n  Button Card\n  Valid Arguments: (ESPDash dashboard, Card Type, const char* name)\n*/\nCard card1(&dashboard, BUTTON_CARD, "Test Button");\n')),(0,r.yg)("h3",{id:"callback"},"Callback"),(0,r.yg)("p",null,"Button card requires a callback function which will be executed when we receive a input from our dashboard. In this example, we will use the ",(0,r.yg)("inlineCode",{parentName:"p"},"attachCallback")," function and provide a lambda function with a boolean argument."),(0,r.yg)("p",null,"In the case of button card, the value sent by your dashboard will be opposite of your current value. For Example: If your button is set to ",(0,r.yg)("inlineCode",{parentName:"p"},"0"),", then clicking that button on dashboard will trigger this callback with ",(0,r.yg)("inlineCode",{parentName:"p"},"1"),"."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Note:")," You need to call the ",(0,r.yg)("inlineCode",{parentName:"p"},"update")," function and ",(0,r.yg)("inlineCode",{parentName:"p"},"sendUpdates")," immediately once you receive the value in callback. Otherwise user input will not be registered on dashboard."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},'/*\n  We provide our attachCallback with a lambda function to handle incomming data\n  `value` is the boolean sent from your dashboard\n*/\ncard1.attachCallback([&](int value){\n  Serial.println("[Card1] Button Callback Triggered: "+String((value == 1)?"true":"false"));\n  card1.update(value);\n  dashboard.sendUpdates();\n});\n')),(0,r.yg)("h3",{id:"updater"},"Updater"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"card1.update(1);\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"card1.update(0);\n")),(0,r.yg)("h3",{id:"reference"},"Reference"),(0,r.yg)("p",null,"This is a reference sketch showing positions for intializer, callback and updater."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},'\n...\n\n/* Button card initializer */\nCard button(&dashboard, BUTTON_CARD, "Test Button");\n\n\nvoid setup() {\n  ...\n\n  /* Button card callback */\n  button.attachCallback([&](int value){\n    Serial.println("Button Callback Triggered: "+String((value == 1)?"true":"false"));\n    /* Button card updater - you need to update the button with latest value upon firing of callback */\n    button.update(value);\n    /* Send update to dashboard */\n    dashboard.sendUpdates();\n  });\n}\n\nvoid loop() {\n  ...\n}\n\n')))}s.isMDXComponent=!0}}]);