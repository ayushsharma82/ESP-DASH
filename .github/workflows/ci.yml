name: Arduino Library CI

on:
  push:
    paths-ignore:
      - "**/**.md"
      - "LICENSE"
      - "keywords.txt"
      - "library.json"
      - "library.properties"
      - "portal"
      - "docs/*"
  pull_request:
    paths-ignore:
      - "**/**.md"
      - "LICENSE"
      - "keywords.txt"
      - "library.json"
      - "library.properties"
      - "portal"
      - "docs/*"

jobs:
  arduino:
    name: Arduino - ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: CI ESP8266
            core: esp8266:esp8266
            board: esp8266:esp8266:huzzah
            index_url: https://arduino.esp8266.com/stable/package_esp8266com_index.json
          
          - name: CI ESP32
            core: esp32:esp32
            board: esp32:esp32:esp32
            index_url: https://espressif.github.io/arduino-esp32/package_esp32_index.json
          
          - name: CI ESP32 (Dev Branch)
            core: esp32:esp32
            board: esp32:esp32:esp32
            index_url: https://espressif.github.io/arduino-esp32/package_esp32_dev_index.json
          
          - name: CI Pico W | RP2040+W
            core: rp2040:rp2040
            board: rp2040:rp2040:rpipicow
            # index_url: https://github.com/earlephilhower/arduino-pico/releases/download/global/package_rp2040_index.json
            index_url: https://github.com/earlephilhower/arduino-pico/releases/download/4.4.3/package_rp2040_index.json
          
          - name: CI Pico 2W | RP2350+W
            core: rp2040:rp2040
            board: rp2040:rp2040:rpipico2w
            # index_url: https://github.com/earlephilhower/arduino-pico/releases/download/global/package_rp2040_index.json
            index_url: https://github.com/earlephilhower/arduino-pico/releases/download/4.4.3/package_rp2040_index.json
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Arduino Lint
        uses: arduino/arduino-lint-action@v1
        with:
          library-manager: update

      - name: Install arduino-cli
        run: curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | BINDIR=/usr/local/bin sh

      - name: Update core index
        run: arduino-cli core update-index --additional-urls "${{ matrix.index_url }}"

      - name: Install core
        run: arduino-cli core install --additional-urls "${{ matrix.index_url }}" ${{ matrix.core }}

      - name: Install AsyncTCP (ESP32)
        if: ${{ matrix.core == 'esp32:esp32' }}
        run: ARDUINO_LIBRARY_ENABLE_UNSAFE_INSTALL=true arduino-cli lib install --git-url https://github.com/ESP32Async/AsyncTCP#v3.4.4

      - name: Install ESPAsyncTCP (ESP8266)
        if: ${{ matrix.core == 'esp8266:esp8266' }}
        run: ARDUINO_LIBRARY_ENABLE_UNSAFE_INSTALL=true arduino-cli lib install --git-url https://github.com/ESP32Async/ESPAsyncTCP#v2.0.0

      - name: Install RPAsyncTCP (RP2040)
        if: ${{ matrix.core == 'rp2040:rp2040' }}
        run: ARDUINO_LIBRARY_ENABLE_UNSAFE_INSTALL=true arduino-cli lib install --git-url https://github.com/ayushsharma82/RPAsyncTCP#v1.3.2

      - name: Install ESPAsyncWebServer
        run: ARDUINO_LIBRARY_ENABLE_UNSAFE_INSTALL=true arduino-cli lib install --git-url https://github.com/ESP32Async/ESPAsyncWebServer#v3.7.9

      - name: Install ArduinoJson
        run: ARDUINO_LIBRARY_ENABLE_UNSAFE_INSTALL=true arduino-cli lib install --git-url https://github.com/bblanchon/ArduinoJson#v7.4.2

      - name: Build AccessPoint
        run: arduino-cli compile --library . --warnings none -b ${{ matrix.board }} "examples/AccessPoint/AccessPoint.ino"

      - name: Build Basic
        run: arduino-cli compile --library . --warnings none -b ${{ matrix.board }} "examples/Basic/Basic.ino"

      - name: Build Benchmark
        run: arduino-cli compile --library . --warnings none -b ${{ matrix.board }} "examples/Benchmark/Benchmark.ino"

      - name: Build Chart
        run: arduino-cli compile --library . --warnings none -b ${{ matrix.board }} "examples/Chart/Chart.ino"

      - name: Build Dynamic
        run: arduino-cli compile --library . --warnings none -b ${{ matrix.board }} "examples/Dynamic/Dynamic.ino"

      - name: Build Interactive
        run: arduino-cli compile --library . --warnings none -b ${{ matrix.board }} "examples/Interactive/Interactive.ino"

  platformio:
    name: PlatformIO - ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: CI ESP8266 | Huzzah
            env: ci-esp8266
            board: huzzah
          
          - name: CI ESP8266 | D1 Mini
            env: ci-esp8266
            board: d1_mini

          - name: CI ESP32
            env: ci-esp32
            board: esp32dev
          
          - name: CI ESP32-S2
            env: ci-esp32
            board: esp32-s2-saola-1
          
          - name: CI ESP32-S3
            env: ci-esp32
            board: esp32-s3-devkitc-1
          
          - name: CI ESP32-C3
            env: ci-esp32
            board: esp32-c3-devkitc-02
          
          - name: CI ESP32-C6
            env: ci-esp32
            board: esp32-c6-devkitc-1
          
          - name: CI Pico W | RP2040+W
            env: ci-rp2040
            board: rpipicow
            platform: https://github.com/maxgerhardt/platform-raspberrypi.git
            opts: "--project-option 'board_build.core=earlephilhower'"

          - name: CI Pico 2W | RP2350+W
            env: ci-rp2350
            board: rpipico2w
            platform: https://github.com/maxgerhardt/platform-raspberrypi.git
            opts: "--project-option 'board_build.core=earlephilhower'"
    steps:
      - uses: actions/checkout@v4

      - name: Set up cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-pio
          path: |
            ~/.cache/pip
            ~/.platformio
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Setup PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      
      - run: PLATFORMIO_SRC_DIR=examples/AccessPoint PIO_BOARD=${{ matrix.board }} pio run -e ${{ matrix.env }}
      - run: PLATFORMIO_SRC_DIR=examples/Basic PIO_BOARD=${{ matrix.board }} pio run -e ${{ matrix.env }}
      - run: PLATFORMIO_SRC_DIR=examples/Benchmark PIO_BOARD=${{ matrix.board }} pio run -e ${{ matrix.env }}
      - run: PLATFORMIO_SRC_DIR=examples/Chart PIO_BOARD=${{ matrix.board }} pio run -e ${{ matrix.env }}
      - run: PLATFORMIO_SRC_DIR=examples/Dynamic PIO_BOARD=${{ matrix.board }} pio run -e ${{ matrix.env }}
      - run: PLATFORMIO_SRC_DIR=examples/Interactive PIO_BOARD=${{ matrix.board }} pio run -e ${{ matrix.env }}
